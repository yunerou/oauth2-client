stages:
  - gen-swagger
  - autotag
  - caching
  - build

default:
  image: golang:1.19

variables:
  GITLAB_CI_USER: gitlab-user-name
  GITLAB_CI_TOKEN: gitlab-access-token

  AWS_ACCOUNT_ID: 111222333444
  AWS_REGION: ap-northeast-1
  AWS_DEFAULT_REGION: ap-northeast-1


# Swagger docs sẽ tự build khi Branch là develop||main, ngoài ra các MR cũng trigger build docs khi có thay đổi trong folder swagger
# Jobs phải tên pages để dùng tính năng gitlab pages
pages:
  image: node:16-alpine
  variables:
    DOCS_FOLDER: "swagger"
    API_FILE: "cpa-api.yaml"
  stage: gen-swagger
  cache:
    - key: "$CI_COMMIT_REF_SLUG"
      paths:
        - .yarn-cache/
  before_script:
    - echo $CI_PROJECT_NAME
    - yarn global add --cache-folder .yarn-cache redoc-cli
  script:
    - mkdir public
    - redoc-cli bundle $DOCS_FOLDER/$API_FILE -o public/index.html
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      changes:
      - swagger/**/*
    - if: $CI_COMMIT_REF_SLUG == 'develop'
    - if: $CI_COMMIT_REF_SLUG == 'main'
  needs: []
  artifacts:
    paths:
      - public


.get-image-tag:
  script:
    - |
      if [[ "$CI_COMMIT_TAG" == "" ]]; then
        imageTag="commit-$CI_COMMIT_SHORT_SHA"
        echo "Dont have git tag - using commit': imageTag = $imageTag"
      else
        imageTag="$CI_COMMIT_TAG"
        echo "Git tag': imageTag = $imageTag"
      fi

build-push-ecr:
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  stage: build
  variables:
    ECR_URL: ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com
  before_script:
    -  mkdir -p /kaniko/.docker
    -  echo "{\"credHelpers\":{\"public.ecr.aws\":\"ecr-login\",\"${ECR_URL}\":\"ecr-login\"}}" > /kaniko/.docker/config.json
  script:
    - !reference [.get-image-tag, script]
    -  /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/Docker/app/Distroless.Dockerfile"
      --destination "${ECR_URL}/${CI_PROJECT_NAME}:$imageTag"
      --target=distroless-deployer

    - |
      echo "Your image ... "
      echo "tag = $imageTag"
      echo "Your ECR url"
      echo "https://${AWS_REGION}.console.aws.amazon.com/ecr/repositories/private/${AWS_ACCOUNT_ID}/${CI_PROJECT_NAME}?region=${AWS_REGION}"
      echo "Your image URI"
      echo "${ECR_URL}/${CI_PROJECT_NAME}:$imageTag"
  needs: []
  rules:
    - if: $CI_COMMIT_TAG
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_REF_SLUG =~ /^.*/
      when: manual

tagging:
  stage: autotag
  needs: []
  only:
    - develop
    - main
  script:
    - git config --global user.name "${GITLAB_USER_NAME}"
    - git config --global user.email "${GITLAB_USER_EMAIL}"
    - tag=$(cat config.yml | grep VERSION | grep -Eo "v[[:digit:]]+\.[[:digit:]]+\.[[:digit:]]+")-$CI_COMMIT_SHORT_SHA
    - git tag "$tag"
    - git push --tags https://$GITLAB_CI_USER:$GITLAB_CI_TOKEN@$CI_SERVER_HOST/$CI_PROJECT_PATH.git HEAD:$CI_COMMIT_BRANCH



build-cache-image:
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  stage: caching
  needs: []
  variables:
    ECR_URL: ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com
  before_script:
    -  mkdir -p /kaniko/.docker
    -  echo "{\"credHelpers\":{\"public.ecr.aws\":\"ecr-login\",\"${ECR_URL}\":\"ecr-login\"}}" > /kaniko/.docker/config.json
  script:
    -  /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/Docker/app/Base.Dockerfile"
      --destination "${ECR_URL}/${CI_PROJECT_NAME}:base-cache119"
      --target=base
      --build-arg GITLAB_USER=${GITLAB_CI_USER}
      --build-arg GITLAB_ACCESS_TOKEN=${GITLAB_CI_TOKEN}

    - |
      echo "Your image ... "
      echo "tag = base-cache119"
      echo "Your ECR url"
      echo "https://${AWS_REGION}.console.aws.amazon.com/ecr/repositories/private/${AWS_ACCOUNT_ID}/${CI_PROJECT_NAME}?region=${AWS_REGION}"
      echo "Your image URI"
      echo "${ECR_URL}/${CI_PROJECT_NAME}:base-cache119"
  rules:
    - changes:
      - go.sum
      - Docker/**/*
      when: manual
